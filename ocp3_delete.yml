---

- name: Delete OpenShift 3 Environment
  hosts: nodes
  gather_facts: no
  vars:
    master_ips: []
    infra_ips: []
    node_ips: []
  vars_files:
    - ocp3_vars.yml
    - passwd.yml

  tasks:
    - name: Collect master ips
      set_fact:
        master_ips: "{{ master_ips + [hostvars[item]['ansible_host']] }}"
      loop: "{{ groups['nodes'] }}"
      when: "'master' in hostvars[item]['openshift_node_group_name']"
      run_once: true
      delegate_to: localhost

    - name: Collect infra node ips
      set_fact:
        infra_ips: "{{ infra_ips + [hostvars[item]['ansible_host']] }}"
      loop: "{{ groups['nodes'] }}"
      when: "'infra' in hostvars[item]['openshift_node_group_name'] and 'master' not in hostvars[item]['openshift_node_group_name']"
      run_once: true
      delegate_to: localhost

    - name: Collect compute node ips
      set_fact:
        node_ips: "{{ node_ips + [hostvars[item]['ansible_host']] }}"
      loop: "{{ groups['nodes'] }}"
      when: "'compute' in hostvars[item]['openshift_node_group_name']"
      run_once: true
      delegate_to: localhost

    - name: Install terraform
      include_tasks: terraform_install.yml

    - name: Unregister server
      redhat_subscription:
        state: absent
        username: "{{ rhsm_user }}"
        password: "{{ rhsm_password }}"
        pool_ids: "{{ rhsm_pool }}"
        autosubscribe: no

    - name: Destroy VMs
      terraform:
        binary_path: "{{ terraform['binary_path'] }}/terraform"
        project_path: "{{ terraform['project_path'] }}"
        state: absent
        variables:
          root_password: "{{ ansible_ssh_pass }}"
          ocp_version: "3"
          image_path: "{{ terraform['image_path'] }}"
          memory: "{{ terraform['memory'] }}"
          vcpu: "{{ terraform['vcpu'] }}"
          domain:  "{{ network['domain'] }}"
          dns:  "{{ network['dns'] }}"
          master_ips: "{{ master_ips | join(',') }}"
          infra_ips: "{{ infra_ips | join(',') }}"
          node_ips: "{{ node_ips | join(',') }}"
          cidr:  "{{ network['cidr'] }}"
          gateway:  "{{ network['gateway'] }}"
      run_once: true
      delegate_to: localhost

    - name: Remove public keys from known_hosts (ips)
      known_hosts:
        name: "{{ ansible_host }}"
        path: "{{ lookup('env','HOME') }}/.ssh/known_hosts"
        state: absent
      delegate_to: localhost
      throttle: 1

    - name: Remove public keys from known_hosts (hostnames)
      known_hosts:
        name: "{{ inventory_hostname }}"
        path: "{{ lookup('env','HOME') }}/.ssh/known_hosts"
        state: absent
      delegate_to: localhost
      throttle: 1


